// generated from rosidl_adapter/resource/msg.idl.em
// with input from px4_msgs/msg/VehicleStatusFlags.msg
// generated code does not contain a copyright notice


module px4_msgs {
  module msg {
    @verbatim (language="comment", text=
      " TODO: rename to failsafe_flags (will be input to failsafe state machine)")
    struct VehicleStatusFlags {
      @verbatim (language="comment", text=
        " time since system start (microseconds)")
      uint64 timestamp;

      @verbatim (language="comment", text=
        " Per-mode requirements")
      uint32 mode_req_angular_velocity;

      uint32 mode_req_attitude;

      uint32 mode_req_local_position;

      uint32 mode_req_local_position_relaxed;

      uint32 mode_req_global_position;

      uint32 mode_req_local_alt;

      uint32 mode_req_mission;

      uint32 mode_req_offboard_signal;

      uint32 mode_req_home_position;

      @verbatim (language="comment", text=
        " if set, cannot arm while in this mode")
      uint32 mode_req_prevent_arming;

      @verbatim (language="comment", text=
        " other requirements, not covered above (for external modes)")
      uint32 mode_req_other;

      boolean calibration_enabled;

      @verbatim (language="comment", text=
        " true if all checks necessary to arm pass")
      boolean pre_flight_checks_pass;

      boolean auto_mission_available;

      boolean angular_velocity_valid;

      boolean attitude_valid;

      boolean local_altitude_valid;

      @verbatim (language="comment", text=
        " set to true by the commander app if the quality of the local position estimate is good enough to use for navigation")
      boolean local_position_valid;

      @verbatim (language="comment", text=
        " Local position with reduced accuracy requirements (e.g. flying with optical flow)")
      boolean local_position_valid_relaxed;

      @verbatim (language="comment", text=
        " set to true by the commander app if the quality of the local horizontal velocity data is good enough to use for navigation")
      boolean local_velocity_valid;

      @verbatim (language="comment", text=
        " set to true by the commander app if the quality of the global position estimate is good enough to use for navigation")
      boolean global_position_valid;

      boolean gps_position_valid;

      @verbatim (language="comment", text=
        " indicates a valid home position (a valid home position is not always a valid launch)")
      boolean home_position_valid;

      boolean offboard_control_signal_lost;

      boolean rc_signal_found_once;

      boolean rc_calibration_in_progress;

      @verbatim (language="comment", text=
        " Set to true if vtol transition failed")
      boolean vtol_transition_failure;

      boolean battery_low_remaining_time;

      boolean battery_unhealthy;

      uint8 battery_warning;
    };
  };
};
